
qURange  = [95,20];
RunList = 'KNM1';
DataType = 'Real';
chi2 = 'chi2CMShape';
SysBudet = 22;
fixPar = 'mNu E0 Norm Bkg';% free par
FSDFlag       = 'SibilleFull';
ELossFlag     = 'KatrinT2';%A20';
AngularTFFlag = 'OFF';

% create mini short cut file for plotting
savedir = [getenv('SamakPath'),'knm1ana/knm1_qUScan/results/'];
savename = sprintf('%sknm1_qUScan_Mini_%.0feV_to_%.0feV_%s_NP1.064.mat',...
    savedir,qURange(1),qURange(2),chi2);

if exist(savename,'file') & 1==2
    load(savename)
else
    M = MultiRunAnalysis('RunList',RunList,...
        'chi2','chi2Stat',...
        'DataType',DataType,...
        'fixPar',fixPar,...
        'RadiativeFlag','ON',...
        'NonPoissonScaleFactor',1.064,...
        'minuitOpt','min ; migrad',...
        'FSDFlag',FSDFlag,...
        'ELossFlag',ELossFlag,...
        'SysBudget',22,...
        'AngularTFFlag',AngularTFFlag);
    
    M.chi2 = chi2;
    %% systematics
    if strcmp(chi2,'chi2CMShape')
        if strcmp(fixPar,'5 6 7 8 11')
            M.ComputeCM('FSDNorm_RelErr',0);
        else
            M.ComputeCM;
        end
    end
    %%
    if strcmp(AngularTFFlag,'ON')
        AddsaveStr = sprintf('_AngTF_%s',ELossFlag);
    else
        AddsaveStr = sprintf('_%s',ELossFlag);
    end
    
    %%
    [parqU, errqU, chi2qU, dofqU] = ...
        M.qUScan('qURange',qURange,...
        'saveplot','ON',...
        'RecomputeFlag','OFF',...
        'CorrMean','OFF',...
        'HoldOn','OFF',...
        'RelFlag','OFF',...
        'saveStr',AddsaveStr,...
        'RefLine',40,...
        'PlotResult','ON',...
        'randMC','ON');
    %%
%    save(savename,'parqU','errqU','chi2qU','dofqU','M');
end


